language: bash

git:
    submodules: false

before_install:
    # Use sed to replace the SSH URL with the public URL, then initialize submodules 
    - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
    - git submodule update --init --recursive
    - sudo apt-get update && sudo apt-get install -y make libarchive-zip-perl git gcc-multilib vim

install:
    - pwd
    - git clone https://github.com/spark/firmware.git firmware
    - cd firmware
    - git checkout release/stable
    - cd ..
    - wget https://launchpad.net/gcc-arm-embedded/4.9/4.9-2015-q3-update/+download/gcc-arm-none-eabi-4_9-2015q3-20150921-linux.tar.bz2
    - tar xjf gcc-arm*.tar.bz2
    - export PATH=$PATH:/home/travis/build/cpipilas/vehicle-testing/gcc-arm-none-eabi-4_9-2015q3/bin
    - arm-none-eabi-gcc --version
    - mkdir particleGeoLoc
    - cp -Rf vehicle_tracking.cpp libs particleGeoLoc
    - cd firmware/main
    - make all PLATFORM=photon APPDIR=../../particleGeoLoc
    - cd ../../

script:
    - echo "script phase"
    # ota update
    - curl -X PUT "https://api.particle.io/v1/devices/25001c001347343438323536?access_token=9f9d7874f34b93011193c8f09f6cfb3c09161851" -F file=@firmware/modules/particleGeoLoc/target/particleGeoLoc.bin -F file_type=binary
    # ping device
    - curl https://api.particle.io/v1/devices/25001c001347343438323536/ping -X PUT -d access_token=9f9d7874f34b93011193c8f09f6cfb3c09161851

after_success:
    - echo "after_success phase"

after_failure:
    - echo "after_failure phase"

after_script:
    - echo "after_script phase"